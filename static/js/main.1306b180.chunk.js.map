{"version":3,"sources":["store/actions/index.js","components/Counter/index.jsx","store/reducers/counter.reducer.js","store/actions/todoList.js","store/reducers/todoList.reducer.js","store/reducers/index.js","components/TodoItem/index.jsx","components/TodoList/index.jsx","App.js","index.js"],"names":["INCREASE_COUNT","DECREASE_COUNT","Counter","dispatch","useDispatch","counterData","useSelector","state","counter","store","useStore","console","log","getState","onClick","type","count","initialState","ADD_TODO","TOGGLE_TODO","DELETE_TODO","combineReducers","todolist","action","text","payload","complete","map","todo","id","filter","TodoItem","style","textDecoration","className","toggle_todo","delete_todo","styles","width","marginLeft","marginTop","TodoList","useState","inputValue","setInputvalue","fontSize","fontFamily","placeholder","value","onChange","e","target","createStore","rootReducer","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0MAAaA,G,MAAiB,kBACjBC,EAAiB,iB,cCiBfC,EAdC,WACZ,IAAMC,EAAWC,cACXC,EAAcC,aAAY,SAAAC,GAAK,OAAIA,EAAMC,WAEzCC,EAAQC,cAGd,OAFAC,QAAQC,IAAIH,EAAMI,YAEX,gCACH,wBAAQC,QAAS,kBAAMX,EDNK,CAChCY,KAAMd,KCKF,eACCI,EAAYW,MACb,wBAAQF,QAAS,kBAAMX,EDXK,CAChCY,KAAMf,KCUF,mB,OCZFiB,EAAe,CACjBD,MAAO,G,gBCHEE,EAAW,WACXC,EAAc,cACdC,EAAc,cCArBH,EAAe,GCENI,cAAgB,CAC7BC,SDD8B,WAAmC,IAAlCf,EAAiC,uDAAzBU,EAAcM,EAAW,uCAChE,OAAQA,EAAOR,MACb,KAAKG,EACH,MAAM,GAAN,mBACKX,GADL,CAEE,CACEiB,KAAMD,EAAOE,QACbC,UAAU,KAIhB,KAAKP,EACH,OAAOZ,EAAMoB,KAAI,SAACC,EAAMC,GACtB,OAAOA,IAAON,EAAOE,QAAd,2BACEG,GADF,IACQF,UAAWE,EAAKF,WAC3BE,KAGN,KAAKR,EACH,OAAOb,EAAMuB,QAAO,SAACF,EAAKC,GACtB,OAAOA,IAAON,EAAOE,WAG7B,QACE,OAAOlB,ICtBXC,QHA4B,WAAkC,IAAjCD,EAAgC,uDAAxBU,EAAaM,EAAW,uCAC3D,OAAOA,EAAOR,MACV,KAAKf,EACD,MAAO,CAACgB,MAAOT,EAAMS,MAAM,GAC/B,KAAKf,EACD,MAAO,CAACe,MAAOT,EAAMS,MAAM,GAC/B,QACI,OAAOT,M,QISJwB,G,MAjBE,SAAC,GAAe,IAAdH,EAAa,EAAbA,KAAKC,EAAQ,EAARA,GAEd1B,EAAWC,cAEjB,OAAO,8BACH,uBAAM4B,MACN,CACIC,eAAgBL,EAAKF,SAAW,eAAiB,QAFrD,UAKKE,EAAKJ,KACN,wBAAQU,UAAU,OAAOpB,QAAS,kBAAMX,EHRzB,SAAC0B,GAAD,MAAS,CAChCd,KAAMI,EACNM,QAASI,GGMgDM,CAAYN,KAA7D,sBACA,wBAAQK,UAAU,OAAOpB,QAAS,kBAAMX,EHLzB,SAAC0B,GAAD,MAAS,CAChCd,KAAMK,EACNK,QAASI,GGGgDO,CAAYP,KAA7D,sBCcNQ,EAAS,CACXC,MAAO,QACPC,WAAY,QACZC,UAAW,SAGAC,EA/BE,WAAO,IAAD,EACeC,mBAAS,IADxB,mBACbC,EADa,KACFC,EADE,KAGbrC,EAAQD,aAAY,SAAAC,GAAK,OAAIA,EAAMe,YAEnCnB,EAAWC,cAEjB,OAAO,sBAAK8B,UAAU,OAAOF,MAAOK,EAA7B,UACH,gCACI,oBAAIL,MAAO,CAACa,SAAU,OAAOC,WAAY,WAAzC,wBACA,uBACIC,YAAY,gBACZC,MAAOL,EACPM,SAAU,SAACC,GAAD,OAAON,EAAcM,EAAEC,OAAOH,UAE5C,wBAAQlC,QAAS,kBAAMX,EJjBA,CAC/BY,KAAMG,EACNO,QIeiDkB,KAAzC,oBAEJ,6BACKpC,EAAMoB,KAAI,SAACC,EAAKC,GACb,OAAO,cAAC,EAAD,CAAUD,KAAMA,EAAMC,GAAIA,GAASA,YChBpDpB,EAAQ2C,YAAYC,GAEnB,SAASC,IAGd,OAEE,cADA,CACC,IAAD,CAAU7C,MAAOA,EAAjB,UAKE,cAAC,EAAD,IACA,cAAC,EAAD,OClBN8C,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.1306b180.chunk.js","sourcesContent":["export const INCREASE_COUNT = \"INCREASE_COUNT\"//action\r\nexport const DECREASE_COUNT = \"DECREASE_COUNT\"//action\r\n\r\nexport const increaseCount = () => ({//action creator\r\n    type: INCREASE_COUNT,\r\n});\r\nexport const decreaseCount = () => ({//action creator\r\n    type: DECREASE_COUNT,\r\n})","import React from 'react'\r\nimport { increaseCount, decreaseCount } from '../../store/actions';\r\nimport {useSelector,useDispatch,useStore} from 'react-redux'\r\n\r\nconst Counter = () => {\r\n    const dispatch = useDispatch()\r\n    const counterData = useSelector(state => state.counter)\r\n\r\n    const store = useStore()\r\n    console.log(store.getState())\r\n\r\n    return <div>\r\n        <button onClick={() => dispatch(decreaseCount())}>-</button>\r\n        {counterData.count}\r\n        <button onClick={() => dispatch(increaseCount())}>+</button>\r\n    </div>\r\n}\r\n\r\nexport default Counter","import { INCREASE_COUNT, DECREASE_COUNT } from '../actions';\r\n\r\nconst initialState = {//маленький state\r\n    count: 0,\r\n};\r\n\r\nexport const counterReducer = (state = initialState,action) => {//reducer,чистая функция,которая изменяет state\r\n    switch(action.type){\r\n        case INCREASE_COUNT:\r\n            return {count: state.count+1};\r\n        case DECREASE_COUNT:\r\n            return {count: state.count-1};\r\n        default:\r\n            return state;\r\n    }\r\n};","export const ADD_TODO = \"ADD_TODO\"\r\nexport const TOGGLE_TODO = \"TOGGLE_TODO\"\r\nexport const DELETE_TODO = \"DELETE_TODO\"\r\n\r\nexport const add_todo = (text) => ({\r\n    type: ADD_TODO,\r\n    payload: text\r\n})\r\nexport const toggle_todo = (id) => ({\r\n    type: TOGGLE_TODO,\r\n    payload: id\r\n})\r\nexport const delete_todo = (id) => ({\r\n    type: DELETE_TODO,\r\n    payload: id\r\n})","import { ADD_TODO, DELETE_TODO, TOGGLE_TODO } from \"../actions/todoList\";\r\n\r\nconst initialState = [];\r\n\r\nexport const todolist_reducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case ADD_TODO:\r\n      return [\r\n        ...state,\r\n        {\r\n          text: action.payload,\r\n          complete: false,\r\n        },\r\n      ];\r\n\r\n    case TOGGLE_TODO:\r\n      return state.map((todo, id) => {\r\n        return id === action.payload\r\n          ? { ...todo, complete: !todo.complete }\r\n          : todo;\r\n      });\r\n\r\n      case DELETE_TODO:\r\n        return state.filter((todo,id) => {\r\n            return id !== action.payload\r\n        })\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};","import { combineReducers } from \"redux\";\r\nimport { counterReducer } from \"./counter.reducer\";\r\nimport { todolist_reducer } from \"./todoList.reducer\";\r\n\r\nexport default combineReducers({\r\n  todolist: todolist_reducer,\r\n  counter: counterReducer,\r\n});\r\n","import React from \"react\"\r\nimport {toggle_todo,delete_todo} from '../../store/actions/todoList';\r\nimport './TodoItem.css';\r\nimport {useDispatch} from 'react-redux'\r\n\r\nconst TodoItem = ({todo,id}) => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return <div>\r\n        <span style={\r\n        {\r\n            textDecoration: todo.complete ? 'line-through' : 'none'\r\n        }\r\n        }>\r\n            {todo.text}\r\n            <button className=\"btn2\" onClick={() => dispatch(toggle_todo(id))}>complete</button>\r\n            <button className=\"btn2\" onClick={() => dispatch(delete_todo(id))}>X</button>\r\n        </span>\r\n    </div>\r\n}\r\n\r\nexport default TodoItem","import React from 'react';\r\nimport {useState} from 'react';\r\nimport TodoItem from '../TodoItem';\r\nimport {add_todo} from '../../store/actions/todoList'\r\nimport {useDispatch,useSelector} from 'react-redux'\r\n\r\nconst TodoList = () => {\r\n    const[inputValue,setInputvalue] = useState('')\r\n\r\n    const state = useSelector(state => state.todolist)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    return <div className=\"todo\" style={styles}>\r\n        <div>\r\n            <h1 style={{fontSize: '45px',fontFamily: 'cursive'}}>To do list</h1>\r\n            <input\r\n                placeholder=\"type smth ...\" \r\n                value={inputValue} \r\n                onChange={(e) => setInputvalue(e.target.value)\r\n            }/>\r\n            <button onClick={() => dispatch(add_todo(inputValue))}>ADD</button>\r\n        </div>\r\n        <ul>\r\n            {state.map((todo,id) => {\r\n                return <TodoItem todo={todo} id={id} key={id}/>\r\n            })}\r\n        </ul>\r\n    </div>\r\n}\r\n\r\nconst styles = {\r\n    width: '500px',\r\n    marginLeft: '600px',\r\n    marginTop: '120px'\r\n}\r\n\r\nexport default TodoList","import './App.css';\nimport Counter from './components/Counter';\nimport {Provider} from 'react-redux';\nimport {createStore} from 'redux';\nimport rootReducer from './store/reducers';\nimport TodoList from './components/TodoList';\nimport {useState} from 'react';\n\n//creating store-создание хранилища\nconst store = createStore(rootReducer)\n\nexport function App() {\n  // const[switchComponent,setSwitch]= useState(false);\n\n  return (\n    //providing store to all components in App.js\n    <Provider store={store}>\n      {/* <button className=\"btn\" onClick={()=>setSwitch(!switchComponent)}>switch</button> */}\n      {/* conditional rendering - условный рендеринг */}\n      {/* {switchComponent ? <Counter /> : <TodoList />} */}\n      {/* <Counter /> */}\n      <Counter />\n      <TodoList />\n    </Provider>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {App} from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);"],"sourceRoot":""}